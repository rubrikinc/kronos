// Code generated by protoc-gen-go. DO NOT EDIT.
// source: drift_service.proto

package kronospb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DriftTimeConfig struct {
	// DriftFactor controls the rate of flow of drifting clock. eg. DriftFactor
	// of 1.1 means 1 second duration of system time will translate to 1.1
	// second with drifting clock.
	DriftFactor float64 `protobuf:"fixed64,1,opt,name=DriftFactor,proto3" json:"DriftFactor,omitempty"`
	// Offset is used to jump the clock by offset nanoseconds
	Offset               int64    `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DriftTimeConfig) Reset()         { *m = DriftTimeConfig{} }
func (m *DriftTimeConfig) String() string { return proto.CompactTextString(m) }
func (*DriftTimeConfig) ProtoMessage()    {}
func (*DriftTimeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_drift_service_bd2df35f17f703c2, []int{0}
}
func (m *DriftTimeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriftTimeConfig.Unmarshal(m, b)
}
func (m *DriftTimeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriftTimeConfig.Marshal(b, m, deterministic)
}
func (dst *DriftTimeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriftTimeConfig.Merge(dst, src)
}
func (m *DriftTimeConfig) XXX_Size() int {
	return xxx_messageInfo_DriftTimeConfig.Size(m)
}
func (m *DriftTimeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DriftTimeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DriftTimeConfig proto.InternalMessageInfo

func (m *DriftTimeConfig) GetDriftFactor() float64 {
	if m != nil {
		return m.DriftFactor
	}
	return 0
}

func (m *DriftTimeConfig) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type DriftTimeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DriftTimeResponse) Reset()         { *m = DriftTimeResponse{} }
func (m *DriftTimeResponse) String() string { return proto.CompactTextString(m) }
func (*DriftTimeResponse) ProtoMessage()    {}
func (*DriftTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_drift_service_bd2df35f17f703c2, []int{1}
}
func (m *DriftTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriftTimeResponse.Unmarshal(m, b)
}
func (m *DriftTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriftTimeResponse.Marshal(b, m, deterministic)
}
func (dst *DriftTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriftTimeResponse.Merge(dst, src)
}
func (m *DriftTimeResponse) XXX_Size() int {
	return xxx_messageInfo_DriftTimeResponse.Size(m)
}
func (m *DriftTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DriftTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DriftTimeResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*DriftTimeConfig)(nil), "kronos.DriftTimeConfig")
	proto.RegisterType((*DriftTimeResponse)(nil), "kronos.DriftTimeResponse")
}

func init() { proto.RegisterFile("drift_service.proto", fileDescriptor_drift_service_bd2df35f17f703c2) }

var fileDescriptor_drift_service_bd2df35f17f703c2 = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x29, 0xca, 0x4c,
	0x2b, 0x89, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0xcb, 0x2e, 0xca, 0xcf, 0xcb, 0x2f, 0x56, 0xf2, 0xe6, 0xe2, 0x77, 0x01, 0x49, 0x87, 0x64,
	0xe6, 0xa6, 0x3a, 0xe7, 0xe7, 0xa5, 0x65, 0xa6, 0x0b, 0x29, 0x70, 0x71, 0x83, 0x85, 0xdc, 0x12,
	0x93, 0x4b, 0xf2, 0x8b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x18, 0x83, 0x90, 0x85, 0x84, 0xc4, 0xb8,
	0xd8, 0xfc, 0xd3, 0xd2, 0x8a, 0x53, 0x4b, 0x24, 0x98, 0x14, 0x18, 0x35, 0x98, 0x83, 0xa0, 0x3c,
	0x25, 0x61, 0x2e, 0x41, 0xb8, 0x61, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x46, 0xc9,
	0x5c, 0x62, 0xa1, 0x05, 0x29, 0x89, 0x25, 0xa9, 0x70, 0xa9, 0x60, 0x88, 0x4b, 0x84, 0x3c, 0xb9,
	0x04, 0x91, 0x64, 0xa0, 0xb6, 0x8b, 0xeb, 0x41, 0x5c, 0xa6, 0x87, 0xe6, 0x2c, 0x29, 0x49, 0x0c,
	0x09, 0x98, 0x15, 0x4a, 0x0c, 0x4e, 0x5c, 0x51, 0x1c, 0x10, 0xd9, 0x82, 0xa4, 0x24, 0x36, 0xb0,
	0x0f, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xad, 0xfb, 0x04, 0x51, 0xf8, 0x00, 0x00, 0x00,
}
